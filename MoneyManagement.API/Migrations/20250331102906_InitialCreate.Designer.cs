// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using MoneyManagement.API.Data;

#nullable disable

namespace MoneyManagement.API.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250331102906_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.3");

            modelBuilder.Entity("MoneyManagement.API.Models.Jar", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<decimal>("CurrentBalance")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Percentage")
                        .HasPrecision(5, 2)
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Jars");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentBalance = 0m,
                            Description = "Essential expenses like housing, utilities, groceries",
                            Name = "Necessities",
                            Percentage = 50m
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentBalance = 0m,
                            Description = "Long-term investments and wealth building",
                            Name = "Financial Freedom",
                            Percentage = 10m
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentBalance = 0m,
                            Description = "Personal development and learning",
                            Name = "Education",
                            Percentage = 10m
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentBalance = 0m,
                            Description = "Emergency fund and future goals",
                            Name = "Long-term Savings",
                            Percentage = 10m
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentBalance = 0m,
                            Description = "Entertainment and fun activities",
                            Name = "Play",
                            Percentage = 10m
                        },
                        new
                        {
                            Id = 6,
                            CreatedAt = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CurrentBalance = 0m,
                            Description = "Charitable donations and helping others",
                            Name = "Give",
                            Percentage = 10m
                        });
                });

            modelBuilder.Entity("MoneyManagement.API.Models.Transaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<decimal>("Amount")
                        .HasPrecision(18, 2)
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("TEXT");

                    b.Property<int>("DestinationJarId")
                        .HasColumnType("INTEGER");

                    b.Property<int>("SourceJarId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("TransactionDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("DestinationJarId");

                    b.HasIndex("SourceJarId");

                    b.ToTable("Transactions");
                });

            modelBuilder.Entity("MoneyManagement.API.Models.Transaction", b =>
                {
                    b.HasOne("MoneyManagement.API.Models.Jar", "DestinationJar")
                        .WithMany()
                        .HasForeignKey("DestinationJarId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("MoneyManagement.API.Models.Jar", "SourceJar")
                        .WithMany()
                        .HasForeignKey("SourceJarId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("DestinationJar");

                    b.Navigation("SourceJar");
                });
#pragma warning restore 612, 618
        }
    }
}
